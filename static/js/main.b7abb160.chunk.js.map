{"version":3,"sources":["utils/employees.js","components/EmployeeRow.js","components/EmployeeContainer.js","App.js","index.js"],"names":["Axios","require","module","exports","getEmployees","get","EmployeeRow","props","src","pic","alt","name","phone","href","email","sortList","order","list","property","sort","a","b","searchList","term","filter","emp","toUpperCase","includes","EmployeeContainer","state","currEmployees","allEmployees","sorting","handleSearch","event","target","value","newList","setState","handleSort","console","log","newArr","employees","then","res","empArray","data","results","map","element","first","last","picture","large","id","className","type","onChange","this","placeholder","onClick","key","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHAAA,IAAMA,EAAQC,EAAQ,IAOtBC,EAAOC,QAAQ,CAACC,aALhB,WACI,OAAOJ,EAAMK,IAAI,mD,kMCuBNC,MAtBf,SAAqBC,GACjB,OAEI,4BACI,4BACA,yBAAKC,IAAKD,EAAME,IAAKC,IAAI,gBAEzB,4BACI,2BAAIH,EAAMI,OAEd,4BACA,2BAAIJ,EAAMK,QAEV,4BACA,uBAAGC,KAAMN,EAAMO,OAAQP,EAAMO,U,iBC6EzC,SAASC,EAASC,EAAOC,EAAMC,GAC3B,OAAOD,EAAKE,MAAK,SAAUC,EAAGC,GAC1B,OAAID,EAAEF,GAAYG,EAAEH,IACR,EAAIF,EACLI,EAAEF,GAAYG,EAAEH,GAChB,EAAIF,EAEJ,KAMnB,SAASM,EAAWL,EAAMM,GACtB,OAAON,EAAKO,QAAO,SAAAC,GACf,QAAIA,EAAId,KAAKe,cAAcC,SAASJ,EAAKG,kBAQlCE,M,4MA/GXC,MAAQ,CACJC,cAAe,GACfC,aAAc,GACdC,QAAS,I,EAwBbC,aAAe,SAAAC,GACX,IAAIX,EAAOW,EAAMC,OAAOC,MAClBC,EAAUf,EAAW,EAAKO,MAAME,aAAcR,GACpD,EAAKe,SAAS,CACVR,cAAeO,K,EAIvBE,WAAa,SAAAL,GACT,IACIlB,EADAE,EAAWgB,EAAMC,OAAOxB,KAGxB,EAAKkB,MAAMG,UAAYd,GACvBF,GAAS,EACT,EAAKsB,SAAS,CACVN,QAAS,OAGbhB,EAAQ,EACR,EAAKsB,SAAS,CAEVN,QAASd,KAGjBsB,QAAQC,IAAI,EAAKZ,MAAMG,QAAS,IAAKd,GACrC,IAAIwB,EAAS3B,EAASC,EAAO,EAAKa,MAAMC,cAAeZ,GACvD,EAAKoB,SAAS,CACVR,cAAeY,K,kEAhDF,IAAD,OAChBC,IAAUvC,eAAewC,MAAK,SAAAC,GAC1B,IACIC,EADUD,EAAIE,KAAKC,QACAC,KAAI,SAAAC,GAQvB,MAPe,CACXvC,KAAMuC,EAAQvC,KAAKwC,MAAQ,IAAMD,EAAQvC,KAAKyC,KAC9CtC,MAAOoC,EAAQpC,MACfF,MAAOsC,EAAQtC,MACfH,IAAKyC,EAAQG,QAAQC,MACrBC,GAAIL,EAAQK,GAAGnB,UAIvB,EAAKE,SAAS,CACVR,cAAegB,EACff,aAAce,S,+BAuCtB,OACI,2BAAOU,UAAU,kDACb,2BAAOA,UAAU,cACjB,4BACQ,4BAAK,2BAAOC,KAAK,OAAOC,SAAUC,KAAK1B,aAAc2B,YAAY,YACjE,4BAAK,4BAAQJ,UAAY,gBAAgB7C,KAAK,OAAOkD,QAASF,KAAKpB,YAA9D,SACL,4BAAK,4BAAQiB,UAAY,gBAAgB7C,KAAK,QAAQkD,QAASF,KAAKpB,YAA/D,UACL,4BAAK,4BAAQiB,UAAY,gBAAgB7C,KAAK,QAAQkD,QAASF,KAAKpB,YAA/D,YAIb,+BAEmBoB,KAAK9B,MAAMC,cAU9BmB,KAAI,SAAAC,GACZ,OAAO,kBAAC,EAAD,CAAavC,KAAMuC,EAAQvC,KAAMG,MAAOoC,EAAQpC,MAAOF,MAAOsC,EAAQtC,MAAOH,IAAKyC,EAAQzC,IAAKqD,IAAKZ,EAAQK,c,GAtF3FQ,a,MCKjBC,MANf,WACE,OACE,kBAAC,EAAD,OCAJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b7abb160.chunk.js","sourcesContent":["const Axios = require(\"axios\");\r\n\r\nfunction getEmployees(){\r\n    return Axios.get(\"https://randomuser.me/api/?results=20&nat=us\");\r\n}\r\n\r\n\r\nmodule.exports={getEmployees}","import React from \"react\";\r\n\r\n\r\n\r\nfunction EmployeeRow(props) {\r\n    return (\r\n\r\n        <tr>\r\n            <td>\r\n            <img src={props.pic} alt=\"profilePic\"></img>\r\n            </td>\r\n            <td> \r\n                <p>{props.name}</p>\r\n            </td>\r\n            <td> \r\n            <p>{props.phone}</p>\r\n            </td>\r\n            <td>\r\n            <a href={props.email}>{props.email}</a>\r\n            </td>\r\n        </tr>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default EmployeeRow;","import React, { Component } from \"react\";\r\nimport EmployeeRow from \"./EmployeeRow\";\r\nimport employees from \"../utils/employees\"\r\n\r\n\r\nclass EmployeeContainer extends Component {\r\n\r\n    state = {\r\n        currEmployees: [],\r\n        allEmployees: [],\r\n        sorting: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        employees.getEmployees().then(res => {\r\n            let empList = res.data.results;\r\n            let empArray = empList.map(element => {\r\n                let employee = {\r\n                    name: element.name.first + \" \" + element.name.last,\r\n                    email: element.email,\r\n                    phone: element.phone,\r\n                    pic: element.picture.large,\r\n                    id: element.id.value\r\n                }\r\n                return employee\r\n            });\r\n            this.setState({\r\n                currEmployees: empArray,\r\n                allEmployees: empArray\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    handleSearch = event => {\r\n        let term = event.target.value;\r\n        const newList = searchList(this.state.allEmployees, term);\r\n        this.setState({\r\n            currEmployees: newList\r\n        });\r\n    }\r\n\r\n    handleSort = event => {\r\n        let property = event.target.name;\r\n        let order;\r\n\r\n        if (this.state.sorting === property) {\r\n            order = -1;\r\n            this.setState({\r\n                sorting: \"\"\r\n            });\r\n        } else {\r\n            order = 1;\r\n            this.setState({\r\n\r\n                sorting: property\r\n            })\r\n        }\r\n        console.log(this.state.sorting, \" \", property)\r\n        let newArr = sortList(order, this.state.currEmployees, property);\r\n        this.setState({\r\n            currEmployees: newArr\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <table className=\"table table-striped table-bordered table-hover\">\r\n                <thead className=\"thead-dark\">\r\n                <tr>\r\n                        <th ><input type=\"text\" onChange={this.handleSearch} placeholder=\"Search\"></input></th>\r\n                        <th ><button className = \"btn btn-light\" name=\"name\" onClick={this.handleSort}>Name</button></th>\r\n                        <th ><button className = \"btn btn-light\" name=\"phone\" onClick={this.handleSort}>Phone</button></th>\r\n                        <th ><button className = \"btn btn-light\" name=\"email\" onClick={this.handleSort}>Email</button></th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {createEmpRows(this.state.currEmployees)}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction createEmpRows(list) {\r\n    return list.map(element => {\r\n        return <EmployeeRow name={element.name} email={element.email} phone={element.phone} pic={element.pic} key={element.id}></EmployeeRow>\r\n    })\r\n}\r\n\r\nfunction sortList(order, list, property) {\r\n    return list.sort(function (a, b) {\r\n        if (a[property] < b[property]) {\r\n            return -1 * order;\r\n        } else if (a[property] > b[property]) {\r\n            return 1 * order;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n}\r\n\r\nfunction searchList(list, term) {\r\n    return list.filter(emp => {\r\n        if (emp.name.toUpperCase().includes(term.toUpperCase())) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    })\r\n}\r\n\r\nexport default EmployeeContainer;","import React from 'react';\nimport EmployeeContainer from \"./components/EmployeeContainer\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <EmployeeContainer/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}